services:
  db:
    image: postgres:latest
    container_name: my_postgres_container
    restart: always
    environment:
      POSTGRES_USER: APG         # Nuovo utente del database
      POSTGRES_PASSWORD: 123ciao # Nuova password
      POSTGRES_DB: ProgCarc      # Nuovo nome del database
    volumes:
      - ./internal/db/init.sql:/docker-entrypoint-initdb.d/init.sql
      - pgdata:/var/lib/postgresql/data # Persistenza dei dati
    ports:
      - "5432:5432"

  auth-service:
    build: ./auth-service
    container_name: my_auth_service
    ports:
      - "8080:8080"
    environment:
      DB_HOST: db                       # Host del database (stesso nome del servizio)
      DB_USER: APG                      # Deve corrispondere a POSTGRES_USER
      DB_PASSWORD: 123ciao              # Deve corrispondere a POSTGRES_PASSWORD
      DB_NAME: ProgCarc                 # Deve corrispondere a POSTGRES_DB
    depends_on:
      - db
    volumes:
      - ./uploads:/app/uploads          # Mappa la cartella uploads sulla macchina locale
    restart: always

  backend_python:
    build: ./backend_python             # Assicurati che questa cartella contenga il Dockerfile e il codice Python
    container_name: my_backend_python
    ports:
      - "8000:8000"                     # Espone la porta 8000 per FastAPI/Uvicorn
    environment:
      DB_HOST: db                       # Deve corrispondere al servizio 'db'
      DB_USER: APG                      # Deve corrispondere a POSTGRES_USER
      DB_PASSWORD: 123ciao              # Deve corrispondere a POSTGRES_PASSWORD
      DB_NAME: ProgCarc                 # Deve corrispondere a POSTGRES_DB
    depends_on:
      - db
    restart: always

volumes:
  pgdata:                                # Volume per la persistenza dei dati PostgreSQL
